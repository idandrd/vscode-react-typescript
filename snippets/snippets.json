{
  "React Component": {
    "prefix": "qqreactcls",
    "body": [
      "import * as React from \"react\";",
      "",
      "export interface I${1:App}Props {",
      "}",
      "",
      "export class ${1:} extends React.Component<I${1:}Props, any> {",
      "  render() {",
      "    return (",
      "      <div>",
      "        ${2:}",
      "      </div>",
      "    );",
      "  }",
      "}",
      ""
    ],
    "description": "Create a React Component with typescript."
  },
  "React Component without import and export": {
    "prefix": "qqtsrcjc",
    "body": [
      "interface I${1:App}Props {",
      "}",
      "",
      "class ${1:} extends React.Component<I${1:}Props, any> {",
      "  render() {",
      "    return (",
      "      <div>",
      "        ${2:}",
      "      </div>",
      "    );",
      "  }",
      "}",
      ""
    ],
    "description": "Create a React Component without import and export."
  },
  "React Stateless Functional Component": {
    "prefix": "qqreactfn",
    "body": [
      "import * as React from \"react\";",
      "",
      "interface I$1Props {",
      "  $2",
      "}",
      "",
      "export const $1 = (props: I$1Props) => {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "};",
      ""
    ],
    "description": "Create a React Stateless Functional Component."
  },
  "render": {
    "prefix": "qqrender",
    "body": [
      "render() {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "When called, it should examine this.props and this.state and return a single React element."
  },
  "componentDidMount": {
    "prefix": "qqcdm",
    "body": ["componentDidMount() {", "  ${1:}", "}"],
    "description": "Invoked immediately after a component is mounted."
  },
  "import": {
    "prefix": "qqimp",
    "body": ["import { $0 } from \"$1\";"],
    "description": "Create a import"
  },
  "reduxSaga": {
    "prefix": "qqsaga",
    "body": [
      "import { SagaIterator } from \"redux-saga\";",
      "import { call, takeEvery } from \"redux-saga/effects\";",
      "",
      "import { bindAsyncAction } from \"@iqoqo/common-util\";",
      "import * as Actions from \"../Actions\"",
      "",
      "export function* $1Saga(): SagaIterator {",
      "  yield takeEvery(Actions${2:.actionName}, $1Worker)",
      "}",
      "",
      "const $1Worker = bindAsyncAction(Actions${3:.asyncActionName})(",
      "  function*(action): SagaIterator {",
      "    ${0:// implementation}",
      "  }",
      ");"
    ],
    "description": "new redux saga"
	},
	
  "importService": {
    "prefix": "qqimpserv",
    "body": [
      "import { $0 } from \"@iqoqo/service-$1\";"
    ],
    "description": "import iqoqo service"
  },
	
  "importRedux": {
    "prefix": "qqimpredx",
    "body": [
      "import $0 from \"@iqoqo/redux-module-$1\";"
    ],
    "description": "import iqoqo redux module"
  },
	
  "importConst": {
    "prefix": "qqimpcons",
    "body": [
      "import { $0 } from \"@iqoqo/common-constants\";"
    ],
    "description": "import iqoqo common constants"
  },
	
  "importContract": {
    "prefix": "qqimpcont",
    "body": [
      "import { $0 } from \"@iqoqo/common-contracts\";"
    ],
    "description": "import iqoqo common contracts"
  }
}
